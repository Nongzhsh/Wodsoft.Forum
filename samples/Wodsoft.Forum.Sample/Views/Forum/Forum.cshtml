@model IViewModel<Thread>
@{
    Forum forum = ViewBag.Forum;
    ViewBag.Title = forum.Name;
    var threads = await forum.LoadAsync(t => t.Threads);
    var today = DateTime.Today;
    var todayCount = await threads.CountAsync(t => t.CreateDate >= today);
}

<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="/">论坛</a></li>
    <li class="breadcrumb-item"><a href="@Url.Action("Board", new { id = forum.BoardId })">@forum.Board.Name</a></li>
    <li class="breadcrumb-item active">@forum.Name</li>
</ol>
<h3>@forum.Name<small class="text-muted"> 今日：@todayCount。</small></h3>
<div class="row">
    <div class="col">
        @if (User.Identity.IsAuthenticated)
        {
            <div class="btn-group">
                <a href="@Url.Action("ThreadCreate", new { id = forum.Index })" class="btn btn-danger">发帖</a>
                <button type="button" class="btn btn-danger dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    <span class="sr-only">Toggle Dropdown</span>
                </button>
                <div class="dropdown-menu">
                    <a class="dropdown-item" href="#">Action</a>
                    <a class="dropdown-item" href="#">Another action</a>
                    <a class="dropdown-item" href="#">Something else here</a>
                    <div role="separator" class="divider"></div>
                    <a class="dropdown-item" href="#">Separated link</a>
                </div>
            </div>
        }
    </div>
    <div class="col text-right">
        @Html.Partial("_Pagination", Model)
    </div>
</div>
<table class="table table-bordered table-hover">
    <thead>
        <tr class="table-primary">
            <td style="width: 32px; text-align: center;"></td>
            <td>标题</td>
            <td style="width: 120px; text-align: center;">作者</td>
            <td style="width: 100px; text-align: center;">回复/查看</td>
            <td style="width: 120px; text-align: center;">最后发表</td>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            var replies = await item.LoadAsync(t => t.Replies);
            <tr>
                <td><a target="_blank" href="@Html.Raw(Url.Action("Thread", new { id = item.Index }))"><span class="glyphicon glyphicon-new-window" aria-hidden="true"></span></a></td>
                <td><a href="@Html.Raw(Url.Action("Thread", new { id = item.Index }))">@item.Title</a></td>
                <td style="text-align: center; vertical-align: middle; padding: 0; line-height: 16px;">
                    <small>@item.Member.Username</small>
                    <br />
                    <small>@item.CreateDate.ToString("yyyy-MM-dd")</small>
                </td>
                <td style="text-align: center; vertical-align: middle; padding: 0; line-height: 16px;">
                    <small>@replies.Count</small>
                    <br />
                    <small>0</small>
                </td>
                <td style="text-align: center; vertical-align: middle; padding: 0; line-height: 16px;">
                    @{
                        var last = await replies.Include(t => t.Member).OrderByDescending(t => t.CreateDate).FirstAsync();
                        <small>@last.Member.Username</small>
                        <br />
                                <small>@last.CreateDate.ToString("yyyy-MM-dd HH:mm")</small>
                    }
                </td>
            </tr>
         }
    </tbody>
</table>